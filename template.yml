AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS SAM Template for creating the API resources (API Gateway & Lambda Functions)
  for the Password Caddy Api

Parameters:
  ENV:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment of the Stack. Either dev or prod
  ACCOUNTID:
    Type: String
    Default: ""
    Description: AWS Account ID
  DYNAMOTABLE:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /password-caddy-api/{API_ENV}/v1/DYNAMO_TABLE
    Description: The name of the DynamoDB Table

Globals:
  Function:
    Timeout: 30
    Environment:
      Variables:
        DYNAMO_TABLE: !Ref DYNAMOTABLE

Resources:
  # CloudWatch
  AccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "password-caddy-api-${ENV}-v1-gateway-access-logs"
      RetentionInDays: 7
  AccessLogStream:
    Type: AWS::Logs::LogStream
    Properties: 
      LogGroupName: !Ref AccessLogGroup
      LogStreamName: access-logs

  # API
  PasswordCaddyApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Description: "HTTP API for Password Caddy Applications"
      AccessLogSettings: !Ref AccessLogGroup
      CorsConfiguration:
        AllowOrigins:
          - "*"
        AllowMethods: 
          - GET
          - POST
          - OPTIONS
        AllowHeaders:
          - "*"
      StageName: !Ref ENV

  # Lambdas
  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "password-caddy-api-${ENV}-v1-CreateUser"
      Role: !Sub "arn:aws:iam::${ACCOUNTID}:role/password-caddy/lambda/${ENV}/ses-dynamo"
      CodeUri: controllers/auth/create-user/
      Handler: main
      Runtime: go1.x
      Architectures:
        - x86_64
      Tracing: Active
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            Path: /v1/user
            Method: POST
            ApiId: !Ref PasswordCaddyApi
  LoginChallengeFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "password-caddy-api-${ENV}-v1-LoginChallenge"
      Role: !Sub "arn:aws:iam::${ACCOUNTID}:role/password-caddy/lambda/${ENV}/ses-dynamo"
      CodeUri: controllers/auth/login-challenge/
      Handler: main
      Runtime: go1.x
      Architectures:
        - x86_64
      Tracing: Active
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            Path: /v1/login/challenge/{email}
            Method: GET
            ApiId: !Ref PasswordCaddyApi
  LoginVerificationFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "password-caddy-api-${ENV}-v1-LoginVerification"
      Role: !Sub "arn:aws:iam::${ACCOUNTID}:role/password-caddy/lambda/${ENV}/dynamodb"
      CodeUri: controllers/auth/login-verification/
      Handler: main
      Runtime: go1.x
      Architectures:
        - x86_64
      Tracing: Active
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            Path: /v1/login/verification/{email}
            Method: POST
            ApiId: !Ref PasswordCaddyApi

Outputs:
  # CloudWatch
  GatewayAccessLogGroup:
    Description: CloudWatch group whcih contains access logs of the API
    Value: !Ref AccessLogGroup

  # Api
  PasswordCaddyApi:
    Description: "HTTP API Gateway URL for Password Caddy Api"
    Value: !Sub "https://${PasswordCaddyApi}.execute-api.${AWS::Region}.amazonaws.com/"
  
  # Endpoints
  LoginChallengeEndpoint:
    Description: "Endpoint for the Login Challenge Lambda"
    Value: !Sub "https://${PasswordCaddyApi}.execute-api.${AWS::Region}.amazonaws.com/v1/login/challenge/{email}"
  LoginVerificationEndpoint:
    Description: "Endpoint for the Login Verification Lambda"
    Value: !Sub "https://${PasswordCaddyApi}.execute-api.${AWS::Region}.amazonaws.com/v1/login/verification/{email}"
  CreateUserEndpoint:
    Description: "Endpoint for the Create User Lambda"
    Value: !Sub "https://${PasswordCaddyApi}.execute-api.${AWS::Region}.amazonaws.com/v1/user"
