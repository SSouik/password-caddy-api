AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS SAM Template for creating the API resources (API Gateway & Lambda Functions)
  for the Password Caddy Api

Parameters:
  ENV:
    Type: String
    Default: dev
    AllowedValues:
      - dev
    Description: Environment of the Stack. Must be dev
  ACCOUNTID:
    Type: String
    Default: ""
    Description: AWS Account ID
  

Globals:
  Function:
    Timeout: 30
    Environment:
      Variables:
        TEST_TOKEN:
        EXPIRATION:
        DYNAMO_TABLE:

Resources:
  PasswordCaddyApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Description: "HTTP API for Password Caddy Applications"
  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CreateUserFunction
      Role: !Sub "arn:aws:iam::${ACCOUNTID}:role/password-caddy/lambda/${ENV}/dynamodb"
      CodeUri: src/controllers/auth/create-user/
      Handler: main
      Runtime: go1.x
      Architectures:
        - x86_64
      Tracing: Active
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            Path: /v1/user
            Method: POST
            ApiId: !Ref PasswordCaddyApi
  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: LoginFunction
      # Role: !Sub "arn:aws:iam::${ACCOUNTID}:role/password-caddy/lambda/${ENV}/cognito"
      CodeUri: src/controllers/auth/login/
      Handler: main
      Runtime: go1.x
      Architectures:
        - x86_64
      Tracing: Active
      Events:
        HttpApiEvent:
          Type: HttpApi
          Properties:
            Path: /v1/login
            Method: GET
            ApiId: !Ref PasswordCaddyApi
